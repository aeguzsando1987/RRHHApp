// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RRHH.WebApi.Data;

#nullable disable

namespace RRHH.WebApi.Migrations
{
    [DbContext(typeof(RRHHDbContext))]
    [Migration("20250507213821_UpdateContactosEmpleadoEntity")]
    partial class UpdateContactosEmpleadoEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RRHH.WebApi.Models.Area", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Clave = "AR1",
                            Descripcion = "AREA PRUEBA",
                            Id_Empresa = 1,
                            Nombre = "AREA PRUEBA"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.ContactosEmpleado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Contacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Relacion")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("ContactosEmpleados");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.ContactosEmpresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Puesto_Ref")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("ContactosEmpresas");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Departamento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id_Area")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Area");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Clave = "DEP1",
                            Descripcion = "DEPARTAMENTO PRUEBA",
                            Id_Area = 1,
                            Nombre = "DEPARTAMENTO PRUEBA"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Id_Jefe")
                        .HasColumnType("int");

                    b.Property<int>("Id_Puesto")
                        .HasColumnType("int");

                    b.Property<int>("Id_Status")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Ubicacion")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Id_Jefe");

                    b.HasIndex("Id_Puesto");

                    b.HasIndex("Id_Status");

                    b.HasIndex("Id_Ubicacion");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado_Perfil", b =>
                {
                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("Apellido_Materno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Apellido_Paterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curp")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Edo_Civil")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Termino")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Id_Tipo_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("NSS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RFC")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id_Empleado");

                    b.HasIndex("Id_Tipo_Empleado");

                    b.ToTable("Empleados_Perfil");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado_Tipo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Empleados_Tipo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descripcion = "COLABORADOR DE CONFIANZA",
                            Prefijo = "CNF",
                            Titulo = "DE CONFIANZA"
                        },
                        new
                        {
                            ID = 2,
                            Descripcion = "TECNICO OPERATIVO CON HRS. EXTRA",
                            Prefijo = "PLA",
                            Titulo = "DE PLANTA"
                        },
                        new
                        {
                            ID = 3,
                            Descripcion = "EMPLEADO EVENTUAL CON CONTRATO TEMPORAL",
                            Prefijo = "EVT",
                            Titulo = "EVENTUAL"
                        },
                        new
                        {
                            ID = 4,
                            Descripcion = "BENEFICIARIO DE FORMACION PROFESIONAL",
                            Prefijo = "BEC",
                            Titulo = "BECARIO"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleados_Direccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Codigo_Postal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero_Ext")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Numero_Int")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefono_Fijo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("Empleados_Direcciones");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Org")
                        .HasColumnType("int");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Razon_Social")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Org");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Clave = "EMP1",
                            Direccion = "",
                            Fecha_Creacion = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_Org = 1,
                            RFC = "",
                            Razon_Social = "EMPRESA PRUEBA"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empresas_Direccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Codigo_Postal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero_Ext")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Numero_Int")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("Empresas_Direcciones");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Jerarquia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Jerarquias");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Organizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Organizaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clave = "ORG1",
                            Fecha_Creacion = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "CONGLOMERADO"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Puesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id_Departamento")
                        .HasColumnType("int");

                    b.Property<int>("Id_Jerarquia")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Departamento");

                    b.HasIndex("Id_Jerarquia");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.PuestosActividad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_PuestosDescriptivo")
                        .HasColumnType("int");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ID_PuestosDescriptivo");

                    b.ToTable("PuestosActividad");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.PuestosDescriptivo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Puesto")
                        .HasColumnType("int");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Puesto")
                        .IsUnique();

                    b.ToTable("PuestosDescriptivo");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion_Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status_Emp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descripcion_Status = "EMPLEADO ACTIVO",
                            Status_Emp = "ACTIVO"
                        },
                        new
                        {
                            ID = 2,
                            Descripcion_Status = "EMPLEADO SUSPENDIDO",
                            Status_Emp = "SUSPENDIDO"
                        },
                        new
                        {
                            ID = 3,
                            Descripcion_Status = "EMPLEADO INACTIVO POR BAJA VOLUNTARIA",
                            Status_Emp = "BAJA VOLUNTARIA"
                        },
                        new
                        {
                            ID = 4,
                            Descripcion_Status = "EMPLEADO INACTIVO POR BAJA INVOLUNTARIA",
                            Status_Emp = "BAJA INVOLUNTARIA"
                        },
                        new
                        {
                            ID = 5,
                            Descripcion_Status = "EMPLEADO INACTIVO POR INCAPACIDAD MEDICA",
                            Status_Emp = "INCAPACIDAD"
                        });
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Ubicacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion_Referencial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Id_Empleado")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("Id_Empleado")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Area", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empresa", "Empresa")
                        .WithMany("Areas")
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.ContactosEmpleado", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empleado", "Empleado")
                        .WithMany("Contactos")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.ContactosEmpresa", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empresa", "Empresa")
                        .WithMany("Contactos")
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Departamento", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Area", "Area")
                        .WithMany("Departamentos")
                        .HasForeignKey("Id_Area")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empleado", "Jefe")
                        .WithMany()
                        .HasForeignKey("Id_Jefe")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RRHH.WebApi.Models.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("Id_Puesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRHH.WebApi.Models.Status", "Status")
                        .WithMany("Empleados")
                        .HasForeignKey("Id_Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RRHH.WebApi.Models.Ubicacion", "Ubicacion")
                        .WithMany("Empleados")
                        .HasForeignKey("Id_Ubicacion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Jefe");

                    b.Navigation("Puesto");

                    b.Navigation("Status");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado_Perfil", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empleado", "Empleado")
                        .WithOne("Perfil")
                        .HasForeignKey("RRHH.WebApi.Models.Empleado_Perfil", "Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRHH.WebApi.Models.Empleado_Tipo", "Tipo")
                        .WithMany("Perfiles")
                        .HasForeignKey("Id_Tipo_Empleado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleados_Direccion", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empleado", "Empleado")
                        .WithMany("Direcciones")
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empresa", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Organizacion", "Organizacion")
                        .WithMany("Empresas")
                        .HasForeignKey("Id_Org")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizacion");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empresas_Direccion", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empresa", "Empresa")
                        .WithMany("Empresas_Direcciones")
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Puesto", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Departamento", "Departamento")
                        .WithMany("Puestos")
                        .HasForeignKey("Id_Departamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RRHH.WebApi.Models.Jerarquia", "Jerarquia")
                        .WithMany("Puestos")
                        .HasForeignKey("Id_Jerarquia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Jerarquia");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.PuestosActividad", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.PuestosDescriptivo", "PuestosDescriptivo")
                        .WithMany("PuestosActividad")
                        .HasForeignKey("ID_PuestosDescriptivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PuestosDescriptivo");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.PuestosDescriptivo", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Puesto", "Puesto")
                        .WithOne("PuestosDescriptivo")
                        .HasForeignKey("RRHH.WebApi.Models.PuestosDescriptivo", "ID_Puesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Ubicacion", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empresa", "Empresa")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.User", b =>
                {
                    b.HasOne("RRHH.WebApi.Models.Empleado", "Empleado")
                        .WithOne("User")
                        .HasForeignKey("RRHH.WebApi.Models.User", "Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Area", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Departamento", b =>
                {
                    b.Navigation("Puestos");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Direcciones");

                    b.Navigation("Perfil");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empleado_Tipo", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Empresa", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Contactos");

                    b.Navigation("Empresas_Direcciones");

                    b.Navigation("Ubicaciones");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Jerarquia", b =>
                {
                    b.Navigation("Puestos");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Organizacion", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Puesto", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("PuestosDescriptivo")
                        .IsRequired();
                });

            modelBuilder.Entity("RRHH.WebApi.Models.PuestosDescriptivo", b =>
                {
                    b.Navigation("PuestosActividad");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Status", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("RRHH.WebApi.Models.Ubicacion", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
